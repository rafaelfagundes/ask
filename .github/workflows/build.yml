name: Build and Release

on:
  push:
    tags:
      - 'v*' 
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        arch: [amd64, arm64]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.2'

    - name: Install dependencies
      run: |
        go mod download
        go mod verify

    - name: Build
      env:
        GOOS: linux
        GOARCH: ${{ matrix.arch }}
      run: |
        go build -v -o ask-linux-${{ matrix.arch }} ./cmd/ask

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.arch }}  # Unique artifact name per architecture
        path: ask-linux-${{ matrix.arch }}

  release:
    needs: build
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      github.event_name == 'release'
    runs-on: ubuntu-24.04

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release assets
      run: |
        # Move binaries from architecture-specific directories to root
        mv ./artifacts/binary-amd64/ask-linux-amd64 ./artifacts/
        mv ./artifacts/binary-arm64/ask-linux-arm64 ./artifacts/
        
        # Clean up empty directories
        rmdir ./artifacts/binary-amd64 ./artifacts/binary-arm64 || true
        
        # Verify final file structure
        ls -la ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/ask-linux-amd64
          ./artifacts/ask-linux-arm64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}